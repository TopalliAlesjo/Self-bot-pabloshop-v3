
/**
 * Module dependencies.
 */

var request = require('superagent')
  , debug = require('debug')('embed');

/**
 * Default key.
 */

var key;

/**
 * Versions.
 */

var versions = {
  objectify: 2,
  oembed: 1,
  preview: 1
};

/**
 * Expose `Embed`.
 */

module.exports = Embed;

/**
 * Initialize an `Embed` with `url`.
 *
 * @param {String} url
 * @api public
 */

function Embed(url) {
  if (!(this instanceof Embed)) return new Embed(url);
  if ('string' != typeof url) throw new Error('url required');
  this.url = url;
  this._key = key;
}

/**
 * Set the default key to `str`.
 *
 * @param {String} str
 * @api public
 */

Embed.key = function(str){
  key = str;
};

/**
 * Assign the API `key`.
 *
 * @param {String} key
 * @return {Embed}
 * @api public
 */

Embed.prototype.key = function(key){
  this._key = key;
  return this;
};

/**
 * Perform a request against embed.ly response `type`.
 *
 * @param {String} type
 * @param {Function} fn
 * @api private
 */

Embed.prototype.request = function(type, fn){
  var v = versions[type];
  debug('GET %s "%s"', type, this.url);
  return request
  .get('http://api.embed.ly/' + v + '/' + type)
  .query({ key: this._key })
  .query({ url: this.url })
  .end(function(err, res){
    if (err) return fn(err);
    if (!res.ok) {
      var err = new Error('got ' + res.status + ' response');
      err.res = res;
      err.text = res.text;
      return fn(err);
    }
    fn(null, res.body);
  });
};

/**
 * Fetch an oEmbed reply and invoke `fn(err, res)`.
 *
 * @param {Function} fn
 * @return {Embed}
 * @api public
 */

Embed.prototype.oembed =
Embed.prototype.basic = function(fn){
  this.request('oembed', fn);
  return this;
};

/**
 * Fetch a preview reply and invoke `fn(err, res)`.
 *
 * @param {Function} fn
 * @return {Embed}
 * @api public
 */

Embed.prototype.preview = function(fn){
  this.request('preview', fn);
  return this;
};

/**
 * Fetch a objectify reply and invoke `fn(err, res)`.
 *
 * @param {Function} fn
 * @return {Embed}
 * @api public
 */

Embed.prototype.objectify =
Embed.prototype.object = function(fn){
  this.request('objectify', fn);
  return this;
};
